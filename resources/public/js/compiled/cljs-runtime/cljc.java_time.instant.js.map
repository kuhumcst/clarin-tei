{"version":3,"sources":["cljc/java_time/instant.cljs"],"mappings":"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","names":["cljc.java-time.instant/min","cljc.java_time.instant.goog$module$goog$object.get","java.time/Instant","cljc.java-time.instant/epoch","cljc.java-time.instant/max","cljc.java-time.instant/truncated-to","this14122","java-time-temporal-TemporalUnit14123","cljc.java-time.instant/range","this14124","java-time-temporal-TemporalField14125","e39818","js/Error","e__39685__auto__","var_args","G__39823","cljc.java-time.instant/of-epoch-second","long14126","long14127","cljs.core.js_invoke","long14128","cljc.java-time.instant/at-offset","this14129","java-time-ZoneOffset14130","cljc.java-time.instant/minus-millis","this14131","long14132","cljc.java-time.instant/get-nano","this14133","cljc.java-time.instant/plus-millis","this14134","long14135","cljc.java-time.instant/minus-seconds","this14136","long14137","cljc.java-time.instant/plus-nanos","this14138","long14139","G__39846","cljc.java-time.instant/plus","this14140","java-time-temporal-TemporalAmount14141","e39849","this14142","long14143","java-time-temporal-TemporalUnit14144","e39852","cljc.java-time.instant/query","this14145","java-time-temporal-TemporalQuery14146","cljc.java-time.instant/to-string","this14147","cljc.java-time.instant/is-before","this14148","java-time-Instant14149","G__39874","cljc.java-time.instant/minus","this14150","java-time-temporal-TemporalAmount14151","e39878","this14152","long14153","java-time-temporal-TemporalUnit14154","e39888","cljc.java-time.instant/at-zone","this14155","java-time-ZoneId14156","cljc.java-time.instant/of-epoch-milli","long14157","cljc.java-time.instant/get-long","this14158","java-time-temporal-TemporalField14159","cljc.java-time.instant/until","this14160","java-time-temporal-Temporal14161","java-time-temporal-TemporalUnit14162","e39906","cljc.java-time.instant/from","java-time-temporal-TemporalAccessor14163","e39908","cljc.java-time.instant/is-after","this14164","java-time-Instant14165","cljc.java-time.instant/minus-nanos","this14166","long14167","cljc.java-time.instant/is-supported","this14168","G__14169","cljc.java-time.instant/parse","java-lang-CharSequence14170","cljc.java-time.instant/hash-code","this14171","cljc.java-time.instant/adjust-into","this14172","java-time-temporal-Temporal14173","e39925","G__39934","cljc.java-time.instant/with","this14174","java-time-temporal-TemporalField14175","long14176","e39937","this14177","java-time-temporal-TemporalAdjuster14178","e39941","G__39946","cljc.java-time.instant/now","cljs.core/js-invoke","java-time-Clock14179","cljc.java-time.instant/to-epoch-milli","this14180","cljc.java-time.instant/get-epoch-second","this14181","cljc.java-time.instant/compare-to","this14182","java-time-Instant14183","cljc.java-time.instant/plus-seconds","this14184","long14185","cljc.java-time.instant/get","this14186","java-time-temporal-TemporalField14187","e39970","cljc.java-time.instant/equals","this14188","java-lang-Object14189"],"sourcesContent":["(ns cljc.java-time.instant (:refer-clojure :exclude [abs get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [goog.object] [java.time :refer [Instant]]))\n(def min (goog.object/get java.time.Instant \"MIN\"))\n(def epoch (goog.object/get java.time.Instant \"EPOCH\"))\n(def max (goog.object/get java.time.Instant \"MAX\"))\n(clojure.core/defn truncated-to {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14122 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14123] (.truncatedTo this14122 java-time-temporal-TemporalUnit14123)))\n(clojure.core/defn range {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^js/JSJoda.ValueRange [^js/JSJoda.Instant this14124 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14125] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.range this14124 java-time-temporal-TemporalField14125))))\n(clojure.core/defn of-epoch-second {:arglists (quote ([\"long\" \"long\"] [\"long\"]))} (^js/JSJoda.Instant [^long long14126 ^long long14127] (js-invoke java.time.Instant \"ofEpochSecond\" long14126 long14127)) (^js/JSJoda.Instant [^long long14128] (js-invoke java.time.Instant \"ofEpochSecond\" long14128)))\n(clojure.core/defn at-offset {:arglists (quote ([\"java.time.Instant\" \"java.time.ZoneOffset\"]))} (^js/JSJoda.OffsetDateTime [^js/JSJoda.Instant this14129 ^js/JSJoda.ZoneOffset java-time-ZoneOffset14130] (.atOffset this14129 java-time-ZoneOffset14130)))\n(clojure.core/defn minus-millis {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14131 ^long long14132] (.minusMillis this14131 long14132)))\n(clojure.core/defn get-nano {:arglists (quote ([\"java.time.Instant\"]))} (^int [^js/JSJoda.Instant this14133] (.nano this14133)))\n(clojure.core/defn plus-millis {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14134 ^long long14135] (.plusMillis this14134 long14135)))\n(clojure.core/defn minus-seconds {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14136 ^long long14137] (.minusSeconds this14136 long14137)))\n(clojure.core/defn plus-nanos {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14138 ^long long14139] (.plusNanos this14138 long14139)))\n(clojure.core/defn plus {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalAmount\"] [\"java.time.Instant\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14140 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount14141] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.plus this14140 java-time-temporal-TemporalAmount14141))) (^js/JSJoda.Instant [^js/JSJoda.Instant this14142 ^long long14143 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14144] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.plus this14142 long14143 java-time-temporal-TemporalUnit14144))))\n(clojure.core/defn query {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalQuery\"]))} (^java.lang.Object [^js/JSJoda.Instant this14145 ^js/JSJoda.TemporalQuery java-time-temporal-TemporalQuery14146] (.query this14145 java-time-temporal-TemporalQuery14146)))\n(clojure.core/defn to-string {:arglists (quote ([\"java.time.Instant\"]))} (^java.lang.String [^js/JSJoda.Instant this14147] (.toString this14147)))\n(clojure.core/defn is-before {:arglists (quote ([\"java.time.Instant\" \"java.time.Instant\"]))} (^boolean [^js/JSJoda.Instant this14148 ^js/JSJoda.Instant java-time-Instant14149] (.isBefore this14148 java-time-Instant14149)))\n(clojure.core/defn minus {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalAmount\"] [\"java.time.Instant\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14150 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount14151] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.minus this14150 java-time-temporal-TemporalAmount14151))) (^js/JSJoda.Instant [^js/JSJoda.Instant this14152 ^long long14153 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14154] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.minus this14152 long14153 java-time-temporal-TemporalUnit14154))))\n(clojure.core/defn at-zone {:arglists (quote ([\"java.time.Instant\" \"java.time.ZoneId\"]))} (^js/JSJoda.ZonedDateTime [^js/JSJoda.Instant this14155 ^js/JSJoda.ZoneId java-time-ZoneId14156] (.atZone this14155 java-time-ZoneId14156)))\n(clojure.core/defn of-epoch-milli {:arglists (quote ([\"long\"]))} (^js/JSJoda.Instant [^long long14157] (js-invoke java.time.Instant \"ofEpochMilli\" long14157)))\n(clojure.core/defn get-long {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^long [^js/JSJoda.Instant this14158 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14159] (.getLong this14158 java-time-temporal-TemporalField14159)))\n(clojure.core/defn until {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.Temporal\" \"java.time.temporal.TemporalUnit\"]))} (^long [^js/JSJoda.Instant this14160 ^js/JSJoda.Temporal java-time-temporal-Temporal14161 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14162] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.until this14160 java-time-temporal-Temporal14161 java-time-temporal-TemporalUnit14162))))\n(clojure.core/defn from {:arglists (quote ([\"java.time.temporal.TemporalAccessor\"]))} (^js/JSJoda.Instant [^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor14163] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (js-invoke java.time.Instant \"from\" java-time-temporal-TemporalAccessor14163))))\n(clojure.core/defn is-after {:arglists (quote ([\"java.time.Instant\" \"java.time.Instant\"]))} (^boolean [^js/JSJoda.Instant this14164 ^js/JSJoda.Instant java-time-Instant14165] (.isAfter this14164 java-time-Instant14165)))\n(clojure.core/defn minus-nanos {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14166 ^long long14167] (.minusNanos this14166 long14167)))\n(clojure.core/defn is-supported {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"] [\"java.time.Instant\" \"java.time.temporal.TemporalUnit\"]))} (^boolean [this14168 G__14169] (.isSupported ^js/JSJoda.Instant this14168 G__14169)))\n(clojure.core/defn parse {:arglists (quote ([\"java.lang.CharSequence\"]))} (^js/JSJoda.Instant [^java.lang.CharSequence java-lang-CharSequence14170] (js-invoke java.time.Instant \"parse\" java-lang-CharSequence14170)))\n(clojure.core/defn hash-code {:arglists (quote ([\"java.time.Instant\"]))} (^int [^js/JSJoda.Instant this14171] (.hashCode this14171)))\n(clojure.core/defn adjust-into {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.Instant this14172 ^js/JSJoda.Temporal java-time-temporal-Temporal14173] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.adjustInto this14172 java-time-temporal-Temporal14173))))\n(clojure.core/defn with {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\" \"long\"] [\"java.time.Instant\" \"java.time.temporal.TemporalAdjuster\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14174 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14175 ^long long14176] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.with this14174 java-time-temporal-TemporalField14175 long14176))) (^js/JSJoda.Instant [^js/JSJoda.Instant this14177 ^js/JSJoda.TemporalAdjuster java-time-temporal-TemporalAdjuster14178] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.with this14177 java-time-temporal-TemporalAdjuster14178))))\n(clojure.core/defn now {:arglists (quote ([] [\"java.time.Clock\"]))} (^js/JSJoda.Instant [] (js-invoke java.time.Instant \"now\")) (^js/JSJoda.Instant [^js/JSJoda.Clock java-time-Clock14179] (js-invoke java.time.Instant \"now\" java-time-Clock14179)))\n(clojure.core/defn to-epoch-milli {:arglists (quote ([\"java.time.Instant\"]))} (^long [^js/JSJoda.Instant this14180] (.toEpochMilli this14180)))\n(clojure.core/defn get-epoch-second {:arglists (quote ([\"java.time.Instant\"]))} (^long [^js/JSJoda.Instant this14181] (.epochSecond this14181)))\n(clojure.core/defn compare-to {:arglists (quote ([\"java.time.Instant\" \"java.time.Instant\"]))} (^int [^js/JSJoda.Instant this14182 ^js/JSJoda.Instant java-time-Instant14183] (.compareTo this14182 java-time-Instant14183)))\n(clojure.core/defn plus-seconds {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14184 ^long long14185] (.plusSeconds this14184 long14185)))\n(clojure.core/defn get {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^int [^js/JSJoda.Instant this14186 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14187] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.get this14186 java-time-temporal-TemporalField14187))))\n(clojure.core/defn equals {:arglists (quote ([\"java.time.Instant\" \"java.lang.Object\"]))} (^boolean [^js/JSJoda.Instant this14188 ^java.lang.Object java-lang-Object14189] (.equals this14188 java-lang-Object14189)))\n"]}