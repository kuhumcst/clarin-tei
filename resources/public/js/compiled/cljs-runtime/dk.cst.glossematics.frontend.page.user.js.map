{"version":3,"sources":["dk/cst/glossematics/frontend/page/user.cljs"],"mappings":"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","names":["dk.cst.glossematics.frontend.page.user/saml-path","saml-type","cljs.core.get","dk.cst.glossematics.frontend.state/paths","js/encodeURIComponent","js/location.href","dk.cst.glossematics.frontend.page.user/logout","e","lambdaisland.fetch/post","cljs.core/reset!","dk.cst.glossematics.frontend.state/authenticated?","dk.cst.glossematics.frontend.page.user/login","dk.cst.glossematics.frontend.page.user/assertions->institution","assertions","map__45657","cljs.core/--destructure-map","organizationName","schacHomeOrganization","or__5045__auto__","cljs.core/first","dk.cst.glossematics.frontend.page.user/assertions->individual","map__45662","cn","displayName","dk.cst.glossematics.frontend.page.user/page","individual","dk.cst.glossematics.frontend.state/assertions","institution","cljs.core/not-empty","cljs.core.dissoc","cljs.core.sort_by","cljs.core/deref","iter__5522__auto__","s__45665","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5520__auto__","size__5521__auto__","cljs.core/count","b__45667","cljs.core/chunk-buffer","i__45666","vec__45668","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__45664","cljs.core/chunk-rest","vec__45677","cljs.core/cons","cljs.core/rest","k","v","kv","cljs.core.into","s__45672","b__45674","i__45673","iter__45671","s__45681","b__45683","i__45682","iter__45680","c","cljs.core/re-matches","cljs.core.sort","clojure.string.join","cljs.core/chunk-first"],"sourcesContent":["(ns dk.cst.glossematics.frontend.page.user\n  \"Page for logging in/out and managing user settings.\"\n  (:require [dk.cst.glossematics.frontend.state :as state]\n            [lambdaisland.fetch :as fetch]\n            [clojure.string :as str]))\n\n(defn saml-path\n  [saml-type]\n  (str (get state/paths saml-type)\n       \"?RelayState=\" (js/encodeURIComponent js/location.href)))\n\n(defn logout [e]\n  (.preventDefault e)\n  (.then (fetch/post (saml-path :saml-logout))\n         (reset! state/authenticated? false)))\n\n(defn login [e]\n  (.preventDefault e)\n  (set! js/location.href (saml-path :saml-login)))\n\n(defn assertions->institution\n  [assertions]\n  (let [{:strs [organizationName schacHomeOrganization]} (:attrs assertions)]\n    (or (first organizationName)\n        (first schacHomeOrganization)\n        \"your institution\")))\n\n(defn assertions->individual\n  [assertions]\n  (let [{:strs [cn displayName]} (:attrs assertions)]\n    (or (first cn)\n        (first displayName)\n        \"Anonymous user\")))\n\n(defn page\n  []\n  (let [individual  (assertions->individual state/assertions)\n        institution (assertions->institution state/assertions)\n        assertions  (-> (:attrs state/assertions)\n                        (not-empty)\n                        (dissoc \"eduPersonTargetedID\")      ; not needed\n                        (->> (sort-by first)))]\n    [:div.user-page\n     [:h1 individual]\n     (if @state/authenticated?\n       [:<>\n        [:section.text-content\n         [:button.logout-button\n          {:on-click logout\n           :title    \"Log out of Glossematics\"}\n          [:span\n           [:img {:src \"/images/lock-svgrepo-com.svg\" :alt \"\"}]\n           \"Log out\"]]\n         [:hr]\n         [:p \"You are currently \" [:em \"logged in\"] \" via \" institution \".\"]\n         (when assertions\n           [:aside\n            [:table.entity-metadata\n             [:tbody\n              (for [[k v :as kv] assertions]\n                [:tr {:key kv}\n                 (into [:td] (for [c k]\n                               (if (re-matches #\"[A-Z]\" c)\n                                 [:<> [:wbr] c]\n                                 c)))\n                 [:td (->> v sort (str/join \", \"))]])]]])]]\n       [:<>\n        [:section.text-content\n         [:button.login-button\n          {:on-click login\n           :title    \"Log in to Glossematics using your institution\"}\n          [:span\n           [:img {:src \"/images/unlock-svgrepo-com-modified.svg\" :alt \"\"}]\n           \"Log in\"]]\n         [:hr]\n         [:p \"You are currently \" [:em \"not\"] \" logged in. \"]\n         [:p\n          \"Glossematics allows you to log in through your own institution \"\n          \"as long as it is part of a common educational federation. \"\n          \"Clicking 'Log in' above will direct you to \"\n          [:abbr {:title \"Where Are You From\"} \"WAYF\"] \" \"\n          \"where you may choose your institution from a list (if applicable).\"]\n         [:p\n          \"You may still view the timeline and the bibliography pages. \"\n          \"However, the search page and the facsimile reader \"\n          \"are not available unless you first authenticate. \"]]])]))\n"]}