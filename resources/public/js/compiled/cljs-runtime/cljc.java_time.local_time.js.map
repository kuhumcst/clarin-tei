{"version":3,"sources":["cljc/java_time/local_time.cljs"],"mappings":";;;;AACA,AAAKA,gCAAI,0EAAA,1EAACC,sDAAgBC;AAC1B,AAAKC,iCAAK,0EAAA,1EAACF,sDAAgBC;AAC3B,AAAKE,qCAAS,0EAAA,1EAACH,sDAAgBC;AAC/B,AAAKG,gCAAI,0EAAA,1EAACJ,sDAAgBC;AAC1B,0CAAA,1CAAmBI,4FAA+GC,UAAgBC;AAAlJ,AAA6J,OAAeD,uBAAUC;;AACtL,yCAAA,zCAAmBC,0FAAyIC,UAAkCC;AAA9L,AAAoO,OAAcD,sBAAUC;;AAC5P,kCAAA,lCAAmBC,4EAAoIC,UAAmCC;AAA1L,AAAiO,OAAQD,gBAAUC;;AACnP,qCAAA,rCAAmBC,kFAAmFC;AAAtG,AAAiH,OAAOA;;AACxH,sCAAA,tCAAmBC,oFAA4HC,UAAgCC;AAA/K,AAA0M,OAAWD,mBAAUC;;AAC/N,wCAAA,xCAAmBC,wFAA6GC,UAAgBC;AAAhJ,AAA2J,OAAaD,qBAAUC;;AAClL,AAAA,+BAAA,uCAAAC,tEAAmBE;AAAnB,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,2DAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,2DAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,2DAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,6DAAA,7DAAmBD,wEAAiHE,SAAcC,SAAcC;AAAhK,AAA0K,oFAAA,7EAACC,yDAAU5B,2EAAyByB,SAASC,SAASC;;;AAAhO,CAAA,6DAAA,7DAAmBJ,wEAAoPM,SAAcC;AAArR,AAA+R,oFAAA,7EAACF,yDAAU5B,2EAAyB6B,SAASC;;;AAA5U,CAAA,6DAAA,7DAAmBP,wEAAgWQ,SAAcC,SAAcC,SAAcC;AAA7Z,AAAua,oFAAA,7EAACN,yDAAU5B,2EAAyB+B,SAASC,SAASC,SAASC;;;AAAte,CAAA,uDAAA,vDAAmBX;;AAAnB,AACA,qCAAA,rCAAmBY,kFAAmFC;AAAtG,AAAiH,OAAOA;;AACxH,0CAAA,1CAAmBC,4FAA+GC,UAAgBC;AAAlJ,AAA6J,OAAeD,uBAAUC;;AACtL,uCAAA,vCAAmBC,sFAAqFC;AAAxG,AAAmH,OAASA;;AAC5H,uCAAA,vCAAmBC,sFAA4GC,UAAgBC;AAA/I,AAA0J,OAAYD,oBAAUC;;AAChL,AAAA,iCAAA,yCAAAvB,1EAAmByB;AAAnB,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,6DAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,6DAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAtB,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,+DAAA,/DAAmBsB,0EAAoMC,UAAoCC;AAA3P,AAAmS,OAAOD,eAAUC;;;AAApT,CAAA,+DAAA,/DAAmBF,0EAAsXG,UAAgBC,UAAkCC;AAA3b,AAAie,OAAOF,eAAUC,UAAUC;;;AAA5f,CAAA,yDAAA,zDAAmBL;;AAAnB,AACA,sCAAA,tCAAmBM,oFAA0GC,UAAeC;AAA5I,AAAsJ,OAAWD,mBAAUC;;AAC3K,wCAAA,xCAAmBC,wFAA4GC,UAAeC;AAA9I,AAAwJ,OAAaD,qBAAUC;;AAC/K,yCAAA,zCAAmBC,0FAA8GC,UAAgBC;AAAjJ,AAA4J,OAAcD,sBAAUC;;AACpL,kCAAA,lCAAmBC,4EAAgIC,UAAmCC;AAAtL,AAA6N,OAAQD,gBAAUC;;AAC/O,oCAAA,pCAAmBC,gFAA4HC,UAA+BC;AAA9K,AAAwM,OAASD,iBAAUC;;AAC3N,sCAAA,tCAAmBC,oFAAiGC;AAApH,AAA+H,OAAWA;;AAC1I,sCAAA,tCAAmBC,oFAA8GC,UAA+BC;AAAhK,AAA0L,OAAWD,mBAAUC;;AAC/M,AAAA,kCAAA,0CAAAlD,5EAAmBoD;AAAnB,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,8DAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,8DAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAjD,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,gEAAA,hEAAmBiD,2EAAqMC,UAAgBC,UAAkCC;AAA1Q,AAAgT,OAAQF,gBAAUC,UAAUC;;;AAA5U,CAAA,gEAAA,hEAAmBH,2EAA4YI,UAAoCC;AAAnc,AAA2e,OAAQD,gBAAUC;;;AAA7f,CAAA,0DAAA,1DAAmBL;;AAAnB,AACA,uCAAA,vCAAmBM,sFAA4GC,UAAgBC;AAA/I,AAA0J,OAAYD,oBAAUC;;AAChL,6CAAA,7CAAmBC,kGAA2FC;AAA9G,AAAyH,OAAgBA;;AACzI,qCAAA,rCAAmBC,kFAAuHC,UAAmCC;AAA7K,AAAoN,OAAUD,kBAAUC;;AACxO,sCAAA,tCAAmBC,oFAA0GC,UAAeC;AAA5I,AAAsJ,OAAWD,mBAAUC;;AAC3K,kCAAA,lCAAmBC,4EAAiJC,UAA8BC,iCAAyDC;AAA3P,AAAiS,OAAQF,gBAAUC,iCAAiCC;;AACpV,2CAAA,3CAAmBC,8FAA2EC;AAA9F,AAAyG,oFAAA,7EAACnE,yDAAU5B,oFAAkC+F;;AACtJ,iCAAA,jCAAmBC,0EAAsHC;AAAzI,AAAmL,oFAAA,7EAACrE,yDAAU5B,6EAA2BiG;;AACzN,qCAAA,rCAAmBC,kFAA6GC,UAA+BC;AAA/J,AAAyL,OAAUD,kBAAUC;;AAC7M,wCAAA,xCAAmBC,wFAA6GC,UAAgBC;AAAhJ,AAA2J,OAAaD,qBAAUC;;AAClL,yCAAA,zCAAmBC,0FAAmKC,UAAUC;AAAhM,AAA0M,OAAmCD,sBAAUC;;AACvP,AAAA,kCAAA,0CAAArF,5EAAmBuF;AAAnB,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,8DAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,8DAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAApF,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,gEAAA,hEAAmBoF,2EAAsKC;AAAzL,AAAsN,oFAAA,7EAACjF,yDAAU5B,8EAA4B6G;;;AAA7P,CAAA,gEAAA,hEAAmBD,2EAAuTE,4BAAyDC;AAAnY,AAA4a,oFAAA,7EAACnF,yDAAU5B,8EAA4B8G,4BAA4BC;;;AAA/e,CAAA,0DAAA,1DAAmBH;;AAAnB,AACA,wCAAA,xCAAmBI,wFAA4GC,UAAeC;AAA9I,AAAwJ,OAAaD,qBAAUC;;AAC/K,uCAAA,vCAAmBC,sFAAqFC;AAAxG,AAAmH,OAASA;;AAC5H,sCAAA,tCAAmBC,oFAAoFC;AAAvG,AAAkH,OAAWA;;AAC7H,wCAAA,xCAAmBC,wFAAmIC,UAA8BC;AAApL,AAAsN,OAAaD,qBAAUC;;AAC7O,AAAA,kCAAA,yCAAApG,3EAAmBsG;AAAnB,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,8DAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,8DAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAnG,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,gEAAA,hEAAmBmG,2EAAuMC,UAAmCC,sCAA4CC;AAAzS,AAAoT,OAAOF,eAAUC,sCAAsCC;;;AAA3W,CAAA,gEAAA,hEAAmBH,2EAAgZI,UAAsCC;AAAzc,AAAmf,OAAOD,eAAUC;;;AAApgB,CAAA,0DAAA,1DAAmBL;;AAAnB,AACA,AAAA,gCAAA,wCAAAtG,xEAAmB6G;AAAnB,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC;;;KAAA;AAAA,OAAAA,4DAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAA1G,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,8DAAA,9DAAmB0G;AAAnB,AAAkH,+CAAA,xCAACC,oBAAUnI;;;AAA7H,CAAA,8DAAA,9DAAmBkI,yEAA6JE;AAAhL,AAA0L,oFAAA,7EAACxG,yDAAU5B,4EAA0BoI;;;AAA/N,CAAA,wDAAA,xDAAmBF;;AAAnB,AACA,uCAAA,vCAAmBG,sFAA2GC,UAA+BC;AAA7J,AAAuL,OAAYD,oBAAUC;;AAC7M,2CAAA,3CAAmBC,8FAA0FC;AAA7G,AAAwH,OAAcA;;AACtI,yCAAA,zCAAmBC,0FAA8GC,UAAgBC;AAAjJ,AAA4J,OAAcD,sBAAUC;;AACpL,gCAAA,hCAAmBC,wEAAiHC,UAAmCC;AAAvK,AAA8M,OAAMD,cAAUC;;AAC9N,6CAAA,7CAAmBC,kGAA6EC;AAAhG,AAA2G,oFAAA,7EAACrH,yDAAU5B,sFAAoCiJ;;AAC1J,mCAAA,nCAAmBC,8EAAwGC,UAA4BC;AAAvJ,AAA8K,OAASD,iBAAUC;;AACjM,mCAAA,nCAAmBC,8EAAmIC,UAAuCC;AAA7L,AAAsO,OAASD,iBAAUC","names":["cljc.java-time.local-time/max","cljc.java_time.local_time.goog$module$goog$object.get","java.time/LocalTime","cljc.java-time.local-time/noon","cljc.java-time.local-time/midnight","cljc.java-time.local-time/min","cljc.java-time.local-time/minus-minutes","this14667","long14668","cljc.java-time.local-time/truncated-to","this14669","java-time-temporal-TemporalUnit14670","cljc.java-time.local-time/range","this14671","java-time-temporal-TemporalField14672","cljc.java-time.local-time/get-hour","this14673","cljc.java-time.local-time/at-offset","this14674","java-time-ZoneOffset14675","cljc.java-time.local-time/minus-hours","this14676","long14677","var_args","G__39832","cljc.java-time.local-time/of","js/Error","int14678","int14679","int14680","cljs.core.js_invoke","int14681","int14682","int14683","int14684","int14685","int14686","cljc.java-time.local-time/get-nano","this14687","cljc.java-time.local-time/minus-seconds","this14688","long14689","cljc.java-time.local-time/get-second","this14690","cljc.java-time.local-time/plus-nanos","this14691","long14692","G__39851","cljc.java-time.local-time/plus","this14693","java-time-temporal-TemporalAmount14694","this14695","long14696","java-time-temporal-TemporalUnit14697","cljc.java-time.local-time/with-hour","this14698","int14699","cljc.java-time.local-time/with-minute","this14700","int14701","cljc.java-time.local-time/plus-minutes","this14702","long14703","cljc.java-time.local-time/query","this14704","java-time-temporal-TemporalQuery14705","cljc.java-time.local-time/at-date","this14706","java-time-LocalDate14707","cljc.java-time.local-time/to-string","this14708","cljc.java-time.local-time/is-before","this14709","java-time-LocalTime14710","G__39896","cljc.java-time.local-time/minus","this14711","long14712","java-time-temporal-TemporalUnit14713","this14714","java-time-temporal-TemporalAmount14715","cljc.java-time.local-time/plus-hours","this14716","long14717","cljc.java-time.local-time/to-second-of-day","this14718","cljc.java-time.local-time/get-long","this14719","java-time-temporal-TemporalField14720","cljc.java-time.local-time/with-nano","this14721","int14722","cljc.java-time.local-time/until","this14723","java-time-temporal-Temporal14724","java-time-temporal-TemporalUnit14725","cljc.java-time.local-time/of-nano-of-day","long14726","cljc.java-time.local-time/from","java-time-temporal-TemporalAccessor14727","cljc.java-time.local-time/is-after","this14728","java-time-LocalTime14729","cljc.java-time.local-time/minus-nanos","this14730","long14731","cljc.java-time.local-time/is-supported","this14732","G__14733","G__39926","cljc.java-time.local-time/parse","java-lang-CharSequence14734","java-lang-CharSequence14735","java-time-format-DateTimeFormatter14736","cljc.java-time.local-time/with-second","this14737","int14738","cljc.java-time.local-time/get-minute","this14739","cljc.java-time.local-time/hash-code","this14740","cljc.java-time.local-time/adjust-into","this14741","java-time-temporal-Temporal14742","G__39948","cljc.java-time.local-time/with","this14743","java-time-temporal-TemporalField14744","long14745","this14746","java-time-temporal-TemporalAdjuster14747","G__39964","cljc.java-time.local-time/now","cljs.core/js-invoke","G__14749","cljc.java-time.local-time/compare-to","this14750","java-time-LocalTime14751","cljc.java-time.local-time/to-nano-of-day","this14752","cljc.java-time.local-time/plus-seconds","this14753","long14754","cljc.java-time.local-time/get","this14755","java-time-temporal-TemporalField14756","cljc.java-time.local-time/of-second-of-day","long14757","cljc.java-time.local-time/equals","this14758","java-lang-Object14759","cljc.java-time.local-time/format","this14760","java-time-format-DateTimeFormatter14761"],"sourcesContent":["(ns cljc.java-time.local-time (:refer-clojure :exclude [abs get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [goog.object] [java.time :refer [LocalTime]]))\n(def max (goog.object/get java.time.LocalTime \"MAX\"))\n(def noon (goog.object/get java.time.LocalTime \"NOON\"))\n(def midnight (goog.object/get java.time.LocalTime \"MIDNIGHT\"))\n(def min (goog.object/get java.time.LocalTime \"MIN\"))\n(clojure.core/defn minus-minutes {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14667 ^long long14668] (.minusMinutes this14667 long14668)))\n(clojure.core/defn truncated-to {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14669 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14670] (.truncatedTo this14669 java-time-temporal-TemporalUnit14670)))\n(clojure.core/defn range {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalField\"]))} (^js/JSJoda.ValueRange [^js/JSJoda.LocalTime this14671 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14672] (.range this14671 java-time-temporal-TemporalField14672)))\n(clojure.core/defn get-hour {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14673] (.hour this14673)))\n(clojure.core/defn at-offset {:arglists (quote ([\"java.time.LocalTime\" \"java.time.ZoneOffset\"]))} (^js/JSJoda.OffsetTime [^js/JSJoda.LocalTime this14674 ^js/JSJoda.ZoneOffset java-time-ZoneOffset14675] (.atOffset this14674 java-time-ZoneOffset14675)))\n(clojure.core/defn minus-hours {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14676 ^long long14677] (.minusHours this14676 long14677)))\n(clojure.core/defn of {:arglists (quote ([\"int\" \"int\" \"int\"] [\"int\" \"int\"] [\"int\" \"int\" \"int\" \"int\"]))} (^js/JSJoda.LocalTime [^int int14678 ^int int14679 ^int int14680] (js-invoke java.time.LocalTime \"of\" int14678 int14679 int14680)) (^js/JSJoda.LocalTime [^int int14681 ^int int14682] (js-invoke java.time.LocalTime \"of\" int14681 int14682)) (^js/JSJoda.LocalTime [^int int14683 ^int int14684 ^int int14685 ^int int14686] (js-invoke java.time.LocalTime \"of\" int14683 int14684 int14685 int14686)))\n(clojure.core/defn get-nano {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14687] (.nano this14687)))\n(clojure.core/defn minus-seconds {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14688 ^long long14689] (.minusSeconds this14688 long14689)))\n(clojure.core/defn get-second {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14690] (.second this14690)))\n(clojure.core/defn plus-nanos {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14691 ^long long14692] (.plusNanos this14691 long14692)))\n(clojure.core/defn plus {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalAmount\"] [\"java.time.LocalTime\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14693 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount14694] (.plus this14693 java-time-temporal-TemporalAmount14694)) (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14695 ^long long14696 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14697] (.plus this14695 long14696 java-time-temporal-TemporalUnit14697)))\n(clojure.core/defn with-hour {:arglists (quote ([\"java.time.LocalTime\" \"int\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14698 ^int int14699] (.withHour this14698 int14699)))\n(clojure.core/defn with-minute {:arglists (quote ([\"java.time.LocalTime\" \"int\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14700 ^int int14701] (.withMinute this14700 int14701)))\n(clojure.core/defn plus-minutes {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14702 ^long long14703] (.plusMinutes this14702 long14703)))\n(clojure.core/defn query {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalQuery\"]))} (^java.lang.Object [^js/JSJoda.LocalTime this14704 ^js/JSJoda.TemporalQuery java-time-temporal-TemporalQuery14705] (.query this14704 java-time-temporal-TemporalQuery14705)))\n(clojure.core/defn at-date {:arglists (quote ([\"java.time.LocalTime\" \"java.time.LocalDate\"]))} (^js/JSJoda.LocalDateTime [^js/JSJoda.LocalTime this14706 ^js/JSJoda.LocalDate java-time-LocalDate14707] (.atDate this14706 java-time-LocalDate14707)))\n(clojure.core/defn to-string {:arglists (quote ([\"java.time.LocalTime\"]))} (^java.lang.String [^js/JSJoda.LocalTime this14708] (.toString this14708)))\n(clojure.core/defn is-before {:arglists (quote ([\"java.time.LocalTime\" \"java.time.LocalTime\"]))} (^boolean [^js/JSJoda.LocalTime this14709 ^js/JSJoda.LocalTime java-time-LocalTime14710] (.isBefore this14709 java-time-LocalTime14710)))\n(clojure.core/defn minus {:arglists (quote ([\"java.time.LocalTime\" \"long\" \"java.time.temporal.TemporalUnit\"] [\"java.time.LocalTime\" \"java.time.temporal.TemporalAmount\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14711 ^long long14712 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14713] (.minus this14711 long14712 java-time-temporal-TemporalUnit14713)) (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14714 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount14715] (.minus this14714 java-time-temporal-TemporalAmount14715)))\n(clojure.core/defn plus-hours {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14716 ^long long14717] (.plusHours this14716 long14717)))\n(clojure.core/defn to-second-of-day {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14718] (.toSecondOfDay this14718)))\n(clojure.core/defn get-long {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalField\"]))} (^long [^js/JSJoda.LocalTime this14719 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14720] (.getLong this14719 java-time-temporal-TemporalField14720)))\n(clojure.core/defn with-nano {:arglists (quote ([\"java.time.LocalTime\" \"int\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14721 ^int int14722] (.withNano this14721 int14722)))\n(clojure.core/defn until {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.Temporal\" \"java.time.temporal.TemporalUnit\"]))} (^long [^js/JSJoda.LocalTime this14723 ^js/JSJoda.Temporal java-time-temporal-Temporal14724 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14725] (.until this14723 java-time-temporal-Temporal14724 java-time-temporal-TemporalUnit14725)))\n(clojure.core/defn of-nano-of-day {:arglists (quote ([\"long\"]))} (^js/JSJoda.LocalTime [^long long14726] (js-invoke java.time.LocalTime \"ofNanoOfDay\" long14726)))\n(clojure.core/defn from {:arglists (quote ([\"java.time.temporal.TemporalAccessor\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor14727] (js-invoke java.time.LocalTime \"from\" java-time-temporal-TemporalAccessor14727)))\n(clojure.core/defn is-after {:arglists (quote ([\"java.time.LocalTime\" \"java.time.LocalTime\"]))} (^boolean [^js/JSJoda.LocalTime this14728 ^js/JSJoda.LocalTime java-time-LocalTime14729] (.isAfter this14728 java-time-LocalTime14729)))\n(clojure.core/defn minus-nanos {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14730 ^long long14731] (.minusNanos this14730 long14731)))\n(clojure.core/defn is-supported {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalUnit\"] [\"java.time.LocalTime\" \"java.time.temporal.TemporalField\"]))} (^boolean [this14732 G__14733] (.isSupported ^js/JSJoda.LocalTime this14732 G__14733)))\n(clojure.core/defn parse {:arglists (quote ([\"java.lang.CharSequence\"] [\"java.lang.CharSequence\" \"java.time.format.DateTimeFormatter\"]))} (^js/JSJoda.LocalTime [^java.lang.CharSequence java-lang-CharSequence14734] (js-invoke java.time.LocalTime \"parse\" java-lang-CharSequence14734)) (^js/JSJoda.LocalTime [^java.lang.CharSequence java-lang-CharSequence14735 ^js/JSJoda.DateTimeFormatter java-time-format-DateTimeFormatter14736] (js-invoke java.time.LocalTime \"parse\" java-lang-CharSequence14735 java-time-format-DateTimeFormatter14736)))\n(clojure.core/defn with-second {:arglists (quote ([\"java.time.LocalTime\" \"int\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14737 ^int int14738] (.withSecond this14737 int14738)))\n(clojure.core/defn get-minute {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14739] (.minute this14739)))\n(clojure.core/defn hash-code {:arglists (quote ([\"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14740] (.hashCode this14740)))\n(clojure.core/defn adjust-into {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.LocalTime this14741 ^js/JSJoda.Temporal java-time-temporal-Temporal14742] (.adjustInto this14741 java-time-temporal-Temporal14742)))\n(clojure.core/defn with {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalField\" \"long\"] [\"java.time.LocalTime\" \"java.time.temporal.TemporalAdjuster\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14743 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14744 ^long long14745] (.with this14743 java-time-temporal-TemporalField14744 long14745)) (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14746 ^js/JSJoda.TemporalAdjuster java-time-temporal-TemporalAdjuster14747] (.with this14746 java-time-temporal-TemporalAdjuster14747)))\n(clojure.core/defn now {:arglists (quote ([] [\"java.time.ZoneId\"] [\"java.time.Clock\"]))} (^js/JSJoda.LocalTime [] (js-invoke java.time.LocalTime \"now\")) (^js/JSJoda.LocalTime [G__14749] (js-invoke java.time.LocalTime \"now\" G__14749)))\n(clojure.core/defn compare-to {:arglists (quote ([\"java.time.LocalTime\" \"java.time.LocalTime\"]))} (^int [^js/JSJoda.LocalTime this14750 ^js/JSJoda.LocalTime java-time-LocalTime14751] (.compareTo this14750 java-time-LocalTime14751)))\n(clojure.core/defn to-nano-of-day {:arglists (quote ([\"java.time.LocalTime\"]))} (^long [^js/JSJoda.LocalTime this14752] (.toNanoOfDay this14752)))\n(clojure.core/defn plus-seconds {:arglists (quote ([\"java.time.LocalTime\" \"long\"]))} (^js/JSJoda.LocalTime [^js/JSJoda.LocalTime this14753 ^long long14754] (.plusSeconds this14753 long14754)))\n(clojure.core/defn get {:arglists (quote ([\"java.time.LocalTime\" \"java.time.temporal.TemporalField\"]))} (^int [^js/JSJoda.LocalTime this14755 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14756] (.get this14755 java-time-temporal-TemporalField14756)))\n(clojure.core/defn of-second-of-day {:arglists (quote ([\"long\"]))} (^js/JSJoda.LocalTime [^long long14757] (js-invoke java.time.LocalTime \"ofSecondOfDay\" long14757)))\n(clojure.core/defn equals {:arglists (quote ([\"java.time.LocalTime\" \"java.lang.Object\"]))} (^boolean [^js/JSJoda.LocalTime this14758 ^java.lang.Object java-lang-Object14759] (.equals this14758 java-lang-Object14759)))\n(clojure.core/defn format {:arglists (quote ([\"java.time.LocalTime\" \"java.time.format.DateTimeFormatter\"]))} (^java.lang.String [^js/JSJoda.LocalTime this14760 ^js/JSJoda.DateTimeFormatter java-time-format-DateTimeFormatter14761] (.format this14760 java-time-format-DateTimeFormatter14761)))\n"]}