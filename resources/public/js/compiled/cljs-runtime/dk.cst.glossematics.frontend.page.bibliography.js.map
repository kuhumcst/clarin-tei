{"version":3,"sources":["dk/cst/glossematics/frontend/page/bibliography.cljs"],"mappings":"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","names":["dk.cst.glossematics.frontend.page.bibliography/skip-links","groups","cljs.core.into","cljs.core.map","p__46010","vec__46011","cljs.core.nth","year","fragment","dk.cst.glossematics.frontend.shared/legal-id","dk.cst.glossematics.frontend.shared.find_fragment","cljs.core.interpose","cljs.core/vec","dk.cst.glossematics.frontend.page.bibliography/handle-name","id->name","x","p1__46018#","id->name'","cljs.core.get","cljs.core/set?","cljs.core.sort","dk.cst.glossematics.frontend.page.bibliography/bibliography-content","entries","iter__5522__auto__","s__46025","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5520__auto__","size__5521__auto__","cljs.core/count","b__46027","cljs.core/chunk-buffer","i__46026","map__46033","cljs.core/-nth","cljs.core/--destructure-map","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__46024","cljs.core/chunk-rest","map__46042","cljs.core/first","cljs.core/cons","cljs.core/rest","author","title","publisher","publication","settlement","bib-entry","pp","name","entry","title'","clojure.string/replace","dk.cst.glossematics.frontend.shared/single","title''","dk.cst.glossematics.frontend.shared/reader-href","author-name","dk.cst.glossematics.frontend.shared/surname-first","publisher-name","settlement-name","cljs.core/re-find","cljs.core.subs","cljs.core/last","dk.cst.glossematics.frontend.page.bibliography/fetch-results!","query-params","p1__46049#","dk.cst.glossematics.frontend.api.fetch","cljs.core.swap_BANG_","dk.cst.glossematics.frontend.state/bibliography","cljs.core/assoc","dk.cst.glossematics.frontend.page.bibliography/bib-selection","current-author","other-author","img-src","dk.cst.glossematics.static-data/entity-types","full-name","dk.cst.glossematics.static-data/author->id","G__46052","clojure.string.split","cljs.core._EQ_","dk.cst.glossematics.frontend.shared/bib-href","dk.cst.glossematics.frontend.page.bibliography/page","map__46054","cljs.core/deref","map__46055","dk.cst.glossematics.frontend.state/search","results","dk.cst.glossematics.frontend.state/location","id","and__5043__auto__","p1__46053#","cljs.core.filter","cljs.core/group-by","cljs.core.comp","cljs.core.sort_by","cljs.core.mapv","p__46059","vec__46060","k","v","dk.cst.glossematics.frontend.shared/kvs-list","cljs.core.partial","cljs.core/chunk-first"],"sourcesContent":["(ns dk.cst.glossematics.frontend.page.bibliography\n  \"Bibliography modeled after the search index page.\"\n  (:require [clojure.string :as str]\n            [dk.cst.glossematics.static-data :as sd]\n            [dk.cst.glossematics.frontend.shared :as shared]\n            [dk.cst.glossematics.frontend.state :as state]\n            [dk.cst.glossematics.frontend.api :as api]))\n\n(defn skip-links\n  [groups]\n  (into [:p.index-page__skip-links]\n        (->> groups\n             (map (fn [[year]]\n                    (let [fragment (str \"#\" (shared/legal-id year))]\n                      [:a {:href     fragment\n                           :on-click #(shared/find-fragment fragment)}\n                       year])))\n             (interpose \", \")\n             (vec))))\n\n;; TODO: make IDs into clickable search links\n(defn handle-name\n  \"Ensures that `x` -- which can be either an ID, a name, or a set of either IDs\n  or names -- parses correctly.\"\n  [id->name x]\n  (when x\n    (let [id->name' #(get id->name % %)]\n      (if (set? x)\n        (->> (map id->name' x)\n             (sort)\n             (interpose \"; \")\n             (into [:<>]))\n        (id->name' x)))))\n\n;; https://examples.yourdictionary.com/bibliography-examples.html\n(defn bibliography-content\n  [id->name entries]\n  [:ul\n   (for [{:keys [document/author\n                 document/title\n                 document/publisher\n                 document/publication\n                 document/settlement\n                 document/bib-entry\n                 document/pp\n                 file/name]\n          :as   entry} entries\n         :let [title'  (when title\n                         (str/replace (shared/single title) #\"\\.$\" \"\"))\n               title'' (if name\n                         [:a {:href (shared/reader-href name)} title']\n                         title')]]\n     [:li {:key bib-entry}\n      (when-let [author-name (handle-name id->name author)]\n        [:<> (shared/surname-first author-name) \". \"])\n      (if publication\n        [:<>\n         \"\\\"\" title'' \"\\\". \"\n         [:em (handle-name id->name publication)]]\n        [:em title''])\n      (when pp\n        [:<> \", pp. \" pp])\n      (when-let [publisher-name (handle-name id->name publisher)]\n        [:<> \", \" publisher-name])\n      (when-let [settlement-name (handle-name id->name settlement)]\n        [:<> \", \" settlement-name])\n      \", \" (if (re-find #\"[a-z]$\" bib-entry)\n             [:strong\n              (subs bib-entry 0 (dec (count bib-entry)))\n              [:sup (last bib-entry)]]\n             [:strong bib-entry])\n      \".\"])])\n\n(defn fetch-results!\n  []\n  (let [query-params {:entity/type    :entity.type/bibliographic-entry\n                      :file/extension :ANY}]\n    (.then (api/fetch \"/search\" {:query-params query-params})\n           #(swap! state/bibliography assoc :results %))))\n\n(defn- bib-selection\n  [id->name current-author other-author]\n  (let [img-src   (-> :entity.type/person sd/entity-types :img-src)\n        full-name (-> other-author\n                      (sd/author->id)\n                      (id->name)\n                      (shared/surname-first)\n                      (str/split #\",\")\n                      (first))]\n    (if (= current-author other-author)\n      [:span [:img.entity-icon {:src img-src}]\n       full-name]\n      [:a {:href (shared/bib-href other-author)}\n       [:img.entity-icon {:src img-src}]\n       full-name])))\n\n(defn page\n  []\n  (let [{:keys [id->name]} @state/search\n        {:keys [results]} @state/bibliography\n        author (-> @state/location :path-params :author)\n        id     (sd/author->id author)]\n    [:div.index-page\n     [:h1\n      [:img {:src \"/images/book-fill.svg\"}]\n      \" Bibliography\"]\n     (when (and id->name results)\n       (let [groups (->> (filter #(= (:document/author %) id) results)\n                         (group-by (comp shared/single :document/year))\n                         (sort-by first)\n                         (mapv (fn [[k v]]\n                                 [(str k) (sort-by :document/bib-entry v)])))]\n         [:<>\n          [:div.text-content\n           [:p.index-links\n            [bib-selection id->name author \"lh\"] \" / \"\n            [bib-selection id->name author \"efj\"] \" / \"\n            [bib-selection id->name author \"pd\"]]\n           [:hr]\n           [skip-links groups]]\n          ^{:key author}\n          [shared/kvs-list groups (partial bibliography-content id->name)]]))]))\n"]}