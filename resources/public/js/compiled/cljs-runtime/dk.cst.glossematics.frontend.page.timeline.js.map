{"version":3,"sources":["dk/cst/glossematics/frontend/page/timeline.cljs"],"mappings":";AAOA,2DAAA,2CAAA,0DAAA,2CAAA,uDAAA,MAAA,oEAAA,4DAAA,6DAAA,2CAAA,uDAAA,MAAA,oEAAA,iEAAA,0DAAA,2CAAA,0EAAA,MAAA,8DAAA,IAAA,sDAAA,/9BAAKA;AASL,2DAAA,2CAAA,oDAAA,2CAAA,qDAAA,2BAAA,uDAAA,kBAAA,6DAAA,2CAAA,qDAAA,wBAAA,uDAAA,kBAAA,4DAAA,2CAAA,qDAAA,6BAAA,uDAAA,kBAAA,yDAAA,2CAAA,qDAAA,yBAAA,uDAAA,kBAAA,gEAAA,2CAAA,qDAAA,yBAAA,uDAAA,kBAAA,KAAA,2CAAA,uDAAA,l8CAAKC;AAaL;;;yDAAA,zDAAOC,0HAEJC;AAFH,AAGE,IAAAC,aAA2B,iBAAAK,WAAe,AAAA,mFAAON;AAAtB,AAAA,wLAAAM,+EAAAA,/PAACR,yFAAAA,mGAAAA;;IAA5BG,iBAAA,AAAAC,4BAAAD;YAAA,AAAAE,4CAAAF,eAAA,nEAAcG;WAAd,AAAAD,4CAAAF,eAAA,lEAAoBI;AAApB,AACE,uKAAA,+GAAA,/QAACE,qDAAM,qDAAA,rDAACC,+CAAOR,mHACNI,6GACDC;;AAGZ,uEAAA,vEAAMI;AAAN,AAEE,IAAA,AAAA,OAAAC,mCAAA,AAAAC,6GAAA,WAAQI,/DAAO,uCAAA,vCAACC;AAAhB,AAAA,OAAAL,oLAAA,WACQM,tIAAO,2DAAA,3DAACC,mHAAwBH;AADxC,AAEE,yEAAA,2CAAA,oKAAA,jRAACI,sBAAOC,gJAAwB,AAACC,4CAAItB,uDAAYgB,qGACblB,nBACA,4EAAA,mFAAA,0DAAA,zNAACyB,wRAA2BL,3SAC5B,kTAAA,mFAAA,6DAAA,lcAACK,igBAA4BL;;;gBALnE,IAAAL,mBAAAC;AAAA,AAAA,OAAAC,6BAAAF;;AAOF,kDAAA,lDAAMW;AAAN,AAEE,oBAAM,oBAAA,AAAAC,pBAACC,oCAAWL;AAAlB,AAAA,gJAAA,tDACGM,yFACAN;;AAFH","names":["dk.cst.glossematics.frontend.page.timeline/default-bands","dk.cst.glossematics.frontend.page.timeline/event-styling","dk.cst.glossematics.frontend.page.timeline/add-styling","event","map__32933","cljs.core/--destructure-map","cljs.core.get","color","icon","G__32934","cljs.core.assoc","cljs.core.dissoc","dk.cst.glossematics.frontend.page.timeline/fetch-timeline-data!","kitchen-async.promise/->promise","kitchen_async.promise.then","e__29086__auto__","e32935","kitchen-async.promise/reject","events","dk.cst.glossematics.frontend.api/fetch","zones","dk.cst.glossematics.frontend.timeline-widget/find-hotzones","cljs.core/reset!","dk.cst.glossematics.frontend.state/timeline","cljs.core.map","cljs.core/assoc-in","dk.cst.glossematics.frontend.page.timeline/page","cljs.core/deref","cljs.core/not-empty","dk.cst.glossematics.frontend.timeline-widget/timeline"],"sourcesContent":["(ns dk.cst.glossematics.frontend.page.timeline\n  \"Page containing a chronological timeline of Louis Hjelmslev's life.\"\n  (:require [kitchen-async.promise :as p]\n            [dk.cst.glossematics.frontend.timeline-widget :as tw]\n            [dk.cst.glossematics.frontend.api :as api]\n            [dk.cst.glossematics.frontend.state :as state]))\n\n(def default-bands\n  {:primary  {:width        \"85%\"\n              :intervalUnit :year}\n   :overview {:width        \"15%\"\n              :intervalUnit :decade}\n   :common   {:intervalPixels 400\n              :timeZone       1\n              :date           \"1950-03-01\"}})\n\n(def event-styling\n  {:life       {:icon  \"/images/heart-2-fill.svg\"\n                :color \"#dd82dd\"}\n   :teaching   {:icon  \"/images/book-fill.svg\"\n                :color \"#779eff\"}\n   :lecture    {:icon  \"/images/book-open-line.svg\"\n                :color \"#169516\"}\n   :travel     {:icon  \"/images/earth-fill.svg\"\n                :color \"#ff663c\"}\n   :networking {:icon  \"/images/group-fill.svg\"\n                :color \"#7a4907\"}\n   nil         {:color \"#333\"}})\n\n(defn- add-styling\n  \"Set icon and color for a timeline `event` based on its :type.\"\n  [event]\n  (let [{:keys [color icon]} (event-styling (:type event))]\n    (assoc (dissoc event :type)\n      :color color\n      :icon icon)))\n\n;; Currently, relies on browser caching to avoid re-fires.\n(defn fetch-timeline-data!\n  []\n  (p/let [events (api/fetch \"/timeline\")\n          zones  (tw/find-hotzones :month events)]\n    (reset! state/timeline {:events (map add-styling events)\n                            :bands  (-> default-bands\n                                        (assoc-in [:primary :zones] zones)\n                                        (assoc-in [:overview :zones] zones))})))\n\n(defn page\n  []\n  (when (not-empty @state/timeline)\n    [tw/timeline {}\n     state/timeline]))\n"]}