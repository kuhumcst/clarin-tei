{"version":3,"sources":["dk/cst/glossematics/frontend/api.cljs"],"mappings":";AAMA,sDAAA,tDAAOA,oHACJC;AADH,AAEE,QAAA,4FACK,iBAAAC,WAAMD;AAAN,AAAA,QAAAC;KAAA;AAAA;;;KAAA;AAAA;;;;AAAA;;;MADL;;AAOF;;;kDAAA,lDAAMC,4GAEHF;AAFH,AAGE,oBAAUG;AAAV;;AAAA,AACE,sEAAA,rEAAMA;;AACN,oBAAM,AAACC,QAAW,AAACL,oDAAmBC;AAAtC,AACE,OAACK,iBAAoB,uLAAA,1IAAK,AAAA,+FAAaC,sGACEC;;AAF3C;;;;AAIJ,iDAAA,jDAAMC,0GACHC;AADH,AAEE,oBAAIC;AACF,QAAA,oEAA6BD;;AAC7BA;;;AAEJ,AAAA;;;;;;;yCAAA,iDAAAE,1FAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,4EAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,8EAAA,eAAAG,7FAAMD,yFAMHR;AANH,AAAA,IAAAU,aAAAD;WAAA,AAAAE,4CAAAD,WAAA,IAAA,lEAMUO;AANV,AAOE,IAAA,AAAA,OAAAC,mCAAA,AAAAC,yDAA8B,iBAAAS,WAAW,AAAC7B,+CAAcC;IAA1B6B,WAA+BZ;AAA/B,AAAA,oHAAAW,SAAAC,6CAAAD,SAAAC,3KAACC,uDAAAA,0EAAAA;KAA/B,WAAAV;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAA,AAAAE,4CAAAF,eAAA,pEAAgB9B;WAAhB,AAAAgC,4CAAAF,eAAA,lEAAuBM;AAAvB,AACE,GAAI,uDAAA,vDAACI,gDAAKxC;AACR,OAACE,gDAAeF;;AAChBoC;;;gBAHJ,IAAAH,mBAAAC;AAAA,AAAA,OAAAC,6BAAAF;;;AAPF,CAAA,iEAAA,jEAAMhB;;AAAN;AAAA,CAAA,2DAAA,WAAAI,tEAAMJ;AAAN,AAAA,IAAAK,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA","names":["dk.cst.glossematics.frontend.api/refresh-dialog-msg","status","G__45641","dk.cst.glossematics.frontend.api/refresh-dialog","dk.cst.glossematics.frontend.state/*block-modal-dialogs*","js/confirm","js/location.replace","dk.cst.glossematics.frontend.state/paths","js/location.href","dk.cst.glossematics.frontend.api/normalize-url","url","dk.cst.glossematics.frontend.state/development?","var_args","args__5774__auto__","len__5768__auto__","i__5769__auto__","argseq__5775__auto__","cljs.core/IndexedSeq","dk.cst.glossematics.frontend.api/fetch","p__45648","vec__45649","cljs.core.nth","seq45643","G__45644","cljs.core/first","cljs.core/next","self__5753__auto__","opts","kitchen-async.promise/->promise","kitchen_async.promise.then","p__45655","map__45656","cljs.core/--destructure-map","cljs.core.get","e__40824__auto__","e45652","kitchen-async.promise/reject","body","G__45653","G__45654","lambdaisland.fetch/get","cljs.core.not_EQ_"],"sourcesContent":["(ns dk.cst.glossematics.frontend.api\n  \"Common API access operations.\"\n  (:require [lambdaisland.fetch :as fetch]\n            [kitchen-async.promise :as p]\n            [dk.cst.glossematics.frontend.state :as state]))\n\n(defn- refresh-dialog-msg\n  [status]\n  (str \"Cannot fetch necessary data from the server. \"\n       (case status\n         403 \"The resource is restricted \u2014 you may have been logged out!\\n\\n\"\n         404 \"The resource does not exist \u2014 the page may need to refresh!\\n\\n\"\n         nil)\n       \"Do you want to log in again and refresh the page?\\n\\n\"))\n\n(defn refresh-dialog\n  \"Display a dialog based on the HTTP `status` asking to refresh the page.\"\n  [status]\n  (when-not state/*block-modal-dialogs*\n    (set! state/*block-modal-dialogs* true)\n    (when (js/confirm (refresh-dialog-msg status))\n      (js/location.replace (str (:saml-login state/paths)\n                                \"?RelayState=\" js/location.href)))))\n\n(defn normalize-url\n  [url]\n  (if state/development?\n    (str \"http://localhost:8080\" url)\n    url))\n\n(defn fetch\n  \"Do a GET request for the resource at `url`, returning the response body.\n  Bad response codes result in a dialog asking the user to log in again.\n\n  Usually, bad responses (e.g. 403) are caused by frontend-server mismatch\n  which can be resolved by loading the latest version of the frontend app.\"\n  [url & [opts]]\n  (p/let [{:keys [status body]} (fetch/get (normalize-url url) opts)]\n    (if (not= status 200)\n      (refresh-dialog status)\n      body)))\n"]}